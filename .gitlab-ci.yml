variables:
  SERVICES: "users things http coap lora influxdb-writer influxdb-reader mongodb-writer mongodb-reader cassandra-writer cassandra-reader postgres-writer postgres-reader cli bootstrap opcua auth twins mqtt provision certs smtp-notifier"

stages:
  - build
  - package

build_mainflux_images:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - >
      for SVC in $SERVICES; do
        /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/docker/Dockerfile --destination $CI_REGISTRY_IMAGE/$SVC:$CI_COMMIT_TAG --build-arg SVC=$SVC
      done
  # rules:
  #   - if: $CI_COMMIT_TAG

build_vernemq:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR/docker/vernemq --dockerfile $CI_PROJECT_DIR/docker/vernemq/Dockerfile --destination $CI_REGISTRY_IMAGE/vernemq:$CI_COMMIT_TAG
  # rules:
  #   - if: $CI_COMMIT_TAG

build_manifests:
  stage: build
  image:
    name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/alpine/helm:3.5.4
    entrypoint: [""]
  script:
    - wget https://github.com/mainflux/devops/archive/refs/tags/v0.12.0.tar.gz
    - tar xzvf v0.12.0.tar.gz
    - cd devops-0.12.0/charts/mainflux
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm dependency update
    - |
      helm template mainflux . -n mainflux \
                 --set ingress.hostname='local.test' \
                 --set ingress.tls.hostname='local.test' \
                 --set ingress.tls.secret='my-certs' \
                 --set influxdb.enabled=true \
                 --set adapter_opcua.enabled=true \
                 --set twins.enabled=true \
                 --set postgresql-users.volumePermissions.enabled=true \
                 --set postgresql-things.volumePermissions.enabled=true \
                 --set postgresql-auth.volumePermissions.enabled=true \
                 --set postgresql-bootstrap.volumePermissions.enabled=true \
                 --set postgresql-certs.volumePermissions.enabled=true \
                 --set postgresql-notifier-smtp.volumePermissions.enabled=true > ../../../manifests.yml
    - ls -la
    - pwd
  artifacts:
    paths:
      - manifests.yml
  # rules:
  #   - if: $CI_COMMIT_TAG
      
package:
  stage: package
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/curlimages/curl:latest
  script:
    - 'sed "s/image:.*\/\(.*\):.*/image: registry.willowglen.ca\/sq\/third-party\/mainflux\/\1:$CI_COMMIT_TAG/" manifests.yml > manifests2.yml'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file manifests2.yml "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/manifests/$CI_COMMIT_TAG/manifests.yml"'
  # rules:
  #   - if: $CI_COMMIT_TAG
